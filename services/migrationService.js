import AsyncStorage from "@react-native-async-storage/async-storage";
import { SQLiteService } from './sqliteService';

const STORAGE_KEY = "@EcoConsommation_releves";

export class MigrationService {
  static async migrateToSQLite() {
    try {
      console.log('üîÑ D√©but de la migration AsyncStorage ‚Üí SQLite...');
      
      // R√©cup√©rer les donn√©es d'AsyncStorage
      const stored = await AsyncStorage.getItem(STORAGE_KEY);
      if (!stored) {
        console.log('‚ÑπÔ∏è Aucune donn√©e √† migrer depuis AsyncStorage');
        return { success: true, migrated: 0 };
      }

      const asyncStorageReleves = JSON.parse(stored);
      
      if (asyncStorageReleves.length === 0) {
        console.log('‚ÑπÔ∏è Aucune donn√©e √† migrer');
        return { success: true, migrated: 0 };
      }

      // Ins√©rer chaque relev√© dans SQLite
      let migratedCount = 0;
      for (const releve of asyncStorageReleves) {
        try {
          await SQLiteService.insertReleve(releve.type, releve.index_val, releve.date);
          migratedCount++;
        } catch (error) {
          console.warn(`‚ö†Ô∏è Erreur migration relev√© ${releve.id}:`, error);
        }
      }

      console.log(`‚úÖ Migration r√©ussie: ${migratedCount}/${asyncStorageReleves.length} relev√©s migr√©s`);
      
      // Sauvegarder un flag pour √©viter les migrations multiples
      await AsyncStorage.setItem('@migration_completed', 'true');
      
      return { success: true, migrated: migratedCount };
      
    } catch (error) {
      console.error('‚ùå Erreur lors de la migration:', error);
      return { success: false, error: error.message };
    }
  }

  static async shouldMigrate() {
    try {
      const migrationCompleted = await AsyncStorage.getItem('@migration_completed');
      return !migrationCompleted;
    } catch (error) {
      console.error('‚ùå Erreur v√©rification migration:', error);
      return true;
    }
  }

  static async clearMigrationFlag() {
    try {
      await AsyncStorage.removeItem('@migration_completed');
      console.log('üîÑ Flag de migration r√©initialis√©');
    } catch (error) {
      console.error('‚ùå Erreur suppression flag migration:', error);
    }
  }
}